{
    "name": "Phalcon\\Websocket\\Server",
    "line": 9,
    "short_desc": "Websocket server supporting https",
    "long_desc": "",
    "hint": null,
    "tags": [],
    "namespace": "Phalcon\\Websocket",
    "file": "\/var\/www\/phalconTool\/src\/Websocket\/Server.php",
    "relative_file": null,
    "hash": "2560e3e90f009326d517ab2ce295f3b3d726b0fd",
    "parent": null,
    "modifiers": 16,
    "is_trait": false,
    "is_interface": false,
    "aliases": {
        "Cli": "Phalcon\\Tools\\Cli"
    },
    "errors": [],
    "interfaces": [],
    "traits": [],
    "properties": {
        "userClass": {
            "name": "userClass",
            "line": 15,
            "short_desc": "User class name",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [],
            "modifiers": 2,
            "default": {
                "nodeType": "Scalar_String",
                "value": "User",
                "attributes": {
                    "startLine": 15,
                    "endLine": 15,
                    "kind": 1
                }
            },
            "errors": []
        },
        "maxBufferSize": {
            "name": "maxBufferSize",
            "line": 20,
            "short_desc": "Maximum buffer size",
            "long_desc": "",
            "hint": [
                [
                    "integer",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [],
            "modifiers": 2,
            "default": null,
            "errors": []
        },
        "master": {
            "name": "master",
            "line": 25,
            "short_desc": "Server socket",
            "long_desc": "",
            "hint": [
                [
                    "\\socket_ressource",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [],
            "modifiers": 2,
            "default": null,
            "errors": []
        },
        "sockets": {
            "name": "sockets",
            "line": 30,
            "short_desc": "Sockets list indexed by id",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [],
            "modifiers": 2,
            "default": {
                "nodeType": "Expr_Array",
                "items": [],
                "attributes": {
                    "startLine": 30,
                    "endLine": 30,
                    "kind": 2
                }
            },
            "errors": []
        },
        "users": {
            "name": "users",
            "line": 35,
            "short_desc": "Users list indexed by id",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [],
            "modifiers": 2,
            "default": {
                "nodeType": "Expr_Array",
                "items": [],
                "attributes": {
                    "startLine": 35,
                    "endLine": 35,
                    "kind": 2
                }
            },
            "errors": []
        },
        "heldMessages": {
            "name": "heldMessages",
            "line": 40,
            "short_desc": "Message waiting gor their user handshake",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [],
            "modifiers": 2,
            "default": {
                "nodeType": "Expr_Array",
                "items": [],
                "attributes": {
                    "startLine": 40,
                    "endLine": 40,
                    "kind": 2
                }
            },
            "errors": []
        },
        "rooms": {
            "name": "rooms",
            "line": 45,
            "short_desc": "Rooms list indexed by name",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [],
            "modifiers": 2,
            "default": {
                "nodeType": "Expr_Array",
                "items": [],
                "attributes": {
                    "startLine": 45,
                    "endLine": 45,
                    "kind": 2
                }
            },
            "errors": []
        },
        "interactive": {
            "name": "interactive",
            "line": 50,
            "short_desc": "Determine if the server show log message",
            "long_desc": "",
            "hint": [
                [
                    "boolean",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [],
            "modifiers": 2,
            "default": {
                "nodeType": "Expr_ConstFetch",
                "name": {
                    "nodeType": "Name",
                    "parts": [
                        "true"
                    ],
                    "attributes": {
                        "startLine": 50,
                        "endLine": 50,
                        "namespacedName": {
                            "nodeType": "Name_FullyQualified",
                            "parts": [
                                "Phalcon",
                                "Websocket",
                                "true"
                            ],
                            "attributes": {
                                "startLine": 50,
                                "endLine": 50
                            }
                        }
                    }
                },
                "attributes": {
                    "startLine": 50,
                    "endLine": 50
                }
            },
            "errors": []
        },
        "headerOriginRequired": {
            "name": "headerOriginRequired",
            "line": 55,
            "short_desc": "Determine if the origin must be check",
            "long_desc": "",
            "hint": [
                [
                    "boolean",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [],
            "modifiers": 2,
            "default": {
                "nodeType": "Expr_ConstFetch",
                "name": {
                    "nodeType": "Name",
                    "parts": [
                        "false"
                    ],
                    "attributes": {
                        "startLine": 55,
                        "endLine": 55,
                        "namespacedName": {
                            "nodeType": "Name_FullyQualified",
                            "parts": [
                                "Phalcon",
                                "Websocket",
                                "false"
                            ],
                            "attributes": {
                                "startLine": 55,
                                "endLine": 55
                            }
                        }
                    }
                },
                "attributes": {
                    "startLine": 55,
                    "endLine": 55
                }
            },
            "errors": []
        },
        "headerSecWebSocketProtocolRequired": {
            "name": "headerSecWebSocketProtocolRequired",
            "line": 60,
            "short_desc": "Determine if the sec-websocket-protocol must be check",
            "long_desc": "",
            "hint": [
                [
                    "boolean",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [],
            "modifiers": 2,
            "default": {
                "nodeType": "Expr_ConstFetch",
                "name": {
                    "nodeType": "Name",
                    "parts": [
                        "false"
                    ],
                    "attributes": {
                        "startLine": 60,
                        "endLine": 60,
                        "namespacedName": {
                            "nodeType": "Name_FullyQualified",
                            "parts": [
                                "Phalcon",
                                "Websocket",
                                "false"
                            ],
                            "attributes": {
                                "startLine": 60,
                                "endLine": 60
                            }
                        }
                    }
                },
                "attributes": {
                    "startLine": 60,
                    "endLine": 60
                }
            },
            "errors": []
        },
        "headerSecWebSocketExtensionsRequired": {
            "name": "headerSecWebSocketExtensionsRequired",
            "line": 66,
            "short_desc": "Determine if the sec-websocket-extensions must be check",
            "long_desc": "",
            "hint": [
                [
                    "boolean",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [],
            "modifiers": 2,
            "default": {
                "nodeType": "Expr_ConstFetch",
                "name": {
                    "nodeType": "Name",
                    "parts": [
                        "false"
                    ],
                    "attributes": {
                        "startLine": 66,
                        "endLine": 66,
                        "namespacedName": {
                            "nodeType": "Name_FullyQualified",
                            "parts": [
                                "Phalcon",
                                "Websocket",
                                "false"
                            ],
                            "attributes": {
                                "startLine": 66,
                                "endLine": 66
                            }
                        }
                    }
                },
                "attributes": {
                    "startLine": 66,
                    "endLine": 66
                }
            },
            "errors": []
        }
    },
    "methods": {
        "__construct": {
            "name": "__construct",
            "line": 81,
            "short_desc": "Initialize master socket",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [],
            "modifiers": 1,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "addr": {
                    "name": "addr",
                    "line": 81,
                    "short_desc": "Ip address to listen on",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false
                },
                "port": {
                    "name": "port",
                    "line": 81,
                    "short_desc": "listen port",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false
                },
                "ssl": {
                    "name": "ssl",
                    "line": 81,
                    "short_desc": "SSL certificate in PEM format\n```\n[\n    'pem'=>'',\n    'crt'=>''\n];\n```",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": "[]",
                    "variadic": false,
                    "is_by_ref": false
                },
                "bufferLength": {
                    "name": "bufferLength",
                    "line": 81,
                    "short_desc": "Length of the buffer",
                    "long_desc": null,
                    "hint": [
                        [
                            "integer",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": "2048",
                    "variadic": false,
                    "is_by_ref": false
                }
            }
        },
        "process": {
            "name": "process",
            "line": 116,
            "short_desc": "Called immediately when the data is recieved.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [],
            "modifiers": 18,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "user": {
                    "name": "user",
                    "line": 116,
                    "short_desc": "&$user  User instance",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Phalcon\\Websocket\\User",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true
                },
                "message": {
                    "name": "message",
                    "line": 116,
                    "short_desc": "&$message Data of the event\n```\n[\n    'type'=>'' \/\/ name of the event,\n    'data'=>''\/\/ data of the event\n];\n```",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true
                }
            }
        },
        "connected": {
            "name": "connected",
            "line": 122,
            "short_desc": "Called after the handshake response is sent to the client.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [],
            "modifiers": 18,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "user": {
                    "name": "user",
                    "line": 122,
                    "short_desc": "&$user User instance",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Phalcon\\Websocket\\User",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true
                }
            }
        },
        "closed": {
            "name": "closed",
            "line": 128,
            "short_desc": "Called after the connection is closed.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [],
            "modifiers": 18,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "user": {
                    "name": "user",
                    "line": 128,
                    "short_desc": "&$user User instance",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Phalcon\\Websocket\\User",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true
                }
            }
        },
        "connecting": {
            "name": "connecting",
            "line": 134,
            "short_desc": "Handle a connecting user, after the instance of the User is created, but before the handshake has completed.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "user": {
                    "name": "user",
                    "line": 134,
                    "short_desc": "&$user User instance",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Phalcon\\Websocket\\User",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true
                }
            }
        },
        "openRoom": {
            "name": "openRoom",
            "line": 141,
            "short_desc": "Called on room open",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "name": {
                    "name": "name",
                    "line": 141,
                    "short_desc": "Name of the opened room",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false
                }
            }
        },
        "closeRoom": {
            "name": "closeRoom",
            "line": 149,
            "short_desc": "Called on room close",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "name": {
                    "name": "name",
                    "line": 149,
                    "short_desc": "Name of the opened room",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false
                }
            }
        },
        "send": {
            "name": "send",
            "line": 164,
            "short_desc": "Send event to an user",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "user": {
                    "name": "user",
                    "line": 164,
                    "short_desc": "&$user  User instance",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Phalcon\\Websocket\\User",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true
                },
                "message": {
                    "name": "message",
                    "line": 164,
                    "short_desc": "&$message Data of the event\n```\n[\n    'type'=>'' \/\/ name of the event,\n    'data'=>''\/\/ data of the event\n];\n```",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true
                }
            }
        },
        "broadcast": {
            "name": "broadcast",
            "line": 191,
            "short_desc": "Send event to multiple user",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "message": {
                    "name": "message",
                    "line": 191,
                    "short_desc": "Data of the event\n```\n[\n    'type'=>'' \/\/ name of the event,\n    'data'=>''\/\/ data of the event\n];\n```",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false
                },
                "room": {
                    "name": "room",
                    "line": 191,
                    "short_desc": "Name of the room, if null send to all user's room",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": "null",
                    "variadic": false,
                    "is_by_ref": false
                },
                "userFrom": {
                    "name": "userFrom",
                    "line": 191,
                    "short_desc": "Id of an user to exclude to send",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": "null",
                    "variadic": false,
                    "is_by_ref": false
                }
            }
        },
        "tick": {
            "name": "tick",
            "line": 212,
            "short_desc": "Happen periodically. Will happen at least once per second, but possibly more often.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "_tick": {
            "name": "_tick",
            "line": 218,
            "short_desc": "Core maintenance processes, such as retrying failed messages.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "run": {
            "name": "run",
            "line": 240,
            "short_desc": "Main processing loop",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [],
            "modifiers": 1,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "connect": {
            "name": "connect",
            "line": 324,
            "short_desc": "Connect an user.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "socket": {
                    "name": "socket",
                    "line": 324,
                    "short_desc": "&$socket User socket",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\socket_ressource",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true
                }
            }
        },
        "disconnect": {
            "name": "disconnect",
            "line": 338,
            "short_desc": "Disconnect an User.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "socket": {
                    "name": "socket",
                    "line": 338,
                    "short_desc": "&$socket  Socket to disconnect",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\socket_ressource",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true
                },
                "triggerClosed": {
                    "name": "triggerClosed",
                    "line": 338,
                    "short_desc": "Set to true if socket need to be closed",
                    "long_desc": null,
                    "hint": [
                        [
                            "boolean",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": "true",
                    "variadic": false,
                    "is_by_ref": false
                },
                "sockErrNo": {
                    "name": "sockErrNo",
                    "line": 338,
                    "short_desc": "Error code, present only on error",
                    "long_desc": null,
                    "hint": [
                        [
                            "integer",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": "null",
                    "variadic": false,
                    "is_by_ref": false
                }
            }
        },
        "doHandshake": {
            "name": "doHandshake",
            "line": 384,
            "short_desc": "Do the handshake client\/server",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "user": {
                    "name": "user",
                    "line": 384,
                    "short_desc": "&$user  User instance",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Phalcon\\Websocket\\User",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true
                },
                "buffer": {
                    "name": "buffer",
                    "line": 384,
                    "short_desc": "&$buffer Buffer containing data",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true
                }
            }
        },
        "checkHost": {
            "name": "checkHost",
            "line": 480,
            "short_desc": "Override and return false if the host is not one that you would expect.",
            "long_desc": "",
            "hint": [
                [
                    "boolean",
                    false
                ]
            ],
            "hint_desc": "Result of the check",
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "hostName": {
                    "name": "hostName",
                    "line": 480,
                    "short_desc": "Name of the host to check",
                    "long_desc": null,
                    "hint": [
                        [
                            "String",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false
                }
            }
        },
        "checkOrigin": {
            "name": "checkOrigin",
            "line": 489,
            "short_desc": "Override and return false if the origin is not one that you would expect.",
            "long_desc": "",
            "hint": [
                [
                    "boolean",
                    false
                ]
            ],
            "hint_desc": "Result of the check",
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "origin": {
                    "name": "origin",
                    "line": 489,
                    "short_desc": "Origin to check",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false
                }
            }
        },
        "checkWebsocProtocol": {
            "name": "checkWebsocProtocol",
            "line": 498,
            "short_desc": "Override and return false if a protocol is not found that you would expect.",
            "long_desc": "",
            "hint": [
                [
                    "boolean",
                    false
                ]
            ],
            "hint_desc": "Result of the check",
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "protocol": {
                    "name": "protocol",
                    "line": 498,
                    "short_desc": "Name of the protocol",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false
                }
            }
        },
        "checkWebsocExtensions": {
            "name": "checkWebsocExtensions",
            "line": 507,
            "short_desc": "Override and return false if an extension is not found that you would expect.",
            "long_desc": "",
            "hint": [
                [
                    "boolean",
                    false
                ]
            ],
            "hint_desc": "Result of the check",
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "extensions": {
                    "name": "extensions",
                    "line": 507,
                    "short_desc": "Extension list",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false
                }
            }
        },
        "processProtocol": {
            "name": "processProtocol",
            "line": 516,
            "short_desc": "Process a protocol",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "Either \"Sec-WebSocket-Protocol: SelectedProtocolFromClientList\\r\\n\" or return an empty string. The carriage return\/newline combo must appear at the end of a non-empty string, and must not appear at the beginning of the string nor in an otherwise empty string, or it will be considered part of the response body, which will trigger an error in the client as it will not be formatted correctly.",
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "protocol": {
                    "name": "protocol",
                    "line": 516,
                    "short_desc": "Protocol to process",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false
                }
            }
        },
        "processExtensions": {
            "name": "processExtensions",
            "line": 525,
            "short_desc": "Process extensions",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "Either \"Sec-WebSocket-Extensions: SelectedExtensions\\r\\n\" or return an empty string.",
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "extensions": {
                    "name": "extensions",
                    "line": 525,
                    "short_desc": "Extensions list",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false
                }
            }
        },
        "getUserBySocket": {
            "name": "getUserBySocket",
            "line": 534,
            "short_desc": "Get an user by his socket",
            "long_desc": "",
            "hint": [
                [
                    "\\Phalcon\\Websocket\\User",
                    false
                ]
            ],
            "hint_desc": "Valid user or null if socket not exists",
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "socket": {
                    "name": "socket",
                    "line": 534,
                    "short_desc": "User socket to get",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\socket_ressource",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false
                }
            }
        },
        "stdout": {
            "name": "stdout",
            "line": 547,
            "short_desc": "Log a success message",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [],
            "modifiers": 1,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "message": {
                    "name": "message",
                    "line": 547,
                    "short_desc": "Message to display",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false
                }
            }
        },
        "stderr": {
            "name": "stderr",
            "line": 557,
            "short_desc": "Log a warning message",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [],
            "modifiers": 1,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "message": {
                    "name": "message",
                    "line": 557,
                    "short_desc": "Message to display",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false
                }
            }
        },
        "frame": {
            "name": "frame",
            "line": 571,
            "short_desc": "Create a frame from user message",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "Formated message",
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "message": {
                    "name": "message",
                    "line": 571,
                    "short_desc": "&$message         Message data",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true
                },
                "user": {
                    "name": "user",
                    "line": 571,
                    "short_desc": "&$user   User instance",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Phalcon\\Websocket\\User",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true
                },
                "messageType": {
                    "name": "messageType",
                    "line": 571,
                    "short_desc": "Type of message",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": "'text'",
                    "variadic": false,
                    "is_by_ref": false
                },
                "messageContinues": {
                    "name": "messageContinues",
                    "line": 571,
                    "short_desc": "Determine if the message is finished or not",
                    "long_desc": null,
                    "hint": [
                        [
                            "boolean",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": "false",
                    "variadic": false,
                    "is_by_ref": false
                }
            }
        },
        "split_packet": {
            "name": "split_packet",
            "line": 643,
            "short_desc": "Check packet if he have more than one frame and process each frame individually",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "length": {
                    "name": "length",
                    "line": 643,
                    "short_desc": "$length of the packet",
                    "long_desc": null,
                    "hint": [
                        [
                            "integer",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false
                },
                "packet": {
                    "name": "packet",
                    "line": 643,
                    "short_desc": "Packet content",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false
                },
                "user": {
                    "name": "user",
                    "line": 643,
                    "short_desc": "&$user  User instance",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Phalcon\\Websocket\\User",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true
                }
            }
        },
        "calcoffset": {
            "name": "calcoffset",
            "line": 686,
            "short_desc": "Calculate header offset",
            "long_desc": "",
            "hint": [
                [
                    "integer",
                    false
                ]
            ],
            "hint_desc": "Offset calculated",
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "headers": {
                    "name": "headers",
                    "line": 686,
                    "short_desc": "&$headers Socket headers",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true
                }
            }
        },
        "deframe": {
            "name": "deframe",
            "line": 705,
            "short_desc": "Process a frame",
            "long_desc": "",
            "hint": [
                [
                    "boolean",
                    false
                ]
            ],
            "hint_desc": "The frame processed of false on fail",
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "message": {
                    "name": "message",
                    "line": 705,
                    "short_desc": "&$message Message data",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true
                },
                "user": {
                    "name": "user",
                    "line": 705,
                    "short_desc": "&$user  User instance",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Phalcon\\Websocket\\User",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true
                }
            }
        },
        "extractHeaders": {
            "name": "extractHeaders",
            "line": 778,
            "short_desc": "Extract the headers of a message",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "Headers extracted",
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "message": {
                    "name": "message",
                    "line": 778,
                    "short_desc": "&$message Message data",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true
                }
            }
        },
        "extractPayload": {
            "name": "extractPayload",
            "line": 819,
            "short_desc": "Extract the payload of the message",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "Payload of the message",
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "message": {
                    "name": "message",
                    "line": 819,
                    "short_desc": "&$message Message data",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true
                },
                "headers": {
                    "name": "headers",
                    "line": 819,
                    "short_desc": "&$headers Headers of the message",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true
                }
            }
        },
        "applyMask": {
            "name": "applyMask",
            "line": 839,
            "short_desc": "Apply a mask on the payload",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "Payload with mask a applied",
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "headers": {
                    "name": "headers",
                    "line": 839,
                    "short_desc": "&$headers Headers of the message",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true
                },
                "payload": {
                    "name": "payload",
                    "line": 839,
                    "short_desc": "&$payload Payload of the message",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true
                }
            }
        },
        "checkRSVBits": {
            "name": "checkRSVBits",
            "line": 863,
            "short_desc": "Override this method if you are using an extension where the RSV bits are used.",
            "long_desc": "",
            "hint": [
                [
                    "boolean",
                    false
                ]
            ],
            "hint_desc": "Result of the check",
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "headers": {
                    "name": "headers",
                    "line": 863,
                    "short_desc": "&$headers Headers of the message",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true
                },
                "user": {
                    "name": "user",
                    "line": 863,
                    "short_desc": "&$user User instance",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Phalcon\\Websocket\\User",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true
                }
            }
        },
        "strtohex": {
            "name": "strtohex",
            "line": 876,
            "short_desc": "Convert a string to his hexadecimal value",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "The converted value",
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "str": {
                    "name": "str",
                    "line": 876,
                    "short_desc": "&$str String to convert",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true
                }
            }
        },
        "printHeaders": {
            "name": "printHeaders",
            "line": 901,
            "short_desc": "Display formated headers on screen",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [],
            "modifiers": 2,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "headers": {
                    "name": "headers",
                    "line": 901,
                    "short_desc": "&$headers Headers of the message",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": null,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true
                }
            }
        }
    },
    "constants": []
}